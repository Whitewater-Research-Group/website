name: Deploy to VPS with Easy Panel

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16' # specify the node version if needed

      - name: Install dependencies
        run: npm ci # using ci for a clean, reliable install from package-lock.json

      - name: Build project
        run: npm run build

      - name: Archive build files
        run: tar -czf build.tar.gz -C dist .

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download and extract build files
        uses: actions/download-artifact@v3
        with:
          name: production-files
          path: ./dist

      - name: Upload build files to VPS
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_PRIVATE_KEY: ${{ secrets.VPS_PRIVATE_KEY }}
          VPS_DEPLOY_DIR: ${{ secrets.VPS_DEPLOY_DIR }}
        run: |
          echo "${VPS_PRIVATE_KEY}" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no build.tar.gz $VPS_USER@$VPS_HOST:$VPS_DEPLOY_DIR
          ssh -i private_key.pem -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "
            cd $VPS_DEPLOY_DIR &&
            tar -xzf build.tar.gz &&
            rm -f build.tar.gz &&
            # Insert any custom commands for reloading/restarting services here
            echo 'Deployment complete.'
          "
      - name: Clean up
        run: rm -f private_key.pem
